const Classes={Bowmaster:"archer",Marksman:"archer",Shadower:"thief",Buccaneer:"bucc",Corsair:"corsair","Dark Knight":"warrior",Hero:"hero",Paladin:"warrior",Magician:"magician",Beginner:"beginner","Night Lord":"thief"},HealthPointGainMinimumResetAP={archer:16,thief:16,corsair:20,bucc:40,warrior:50,hero:50,magician:10,beginner:8},HealthPointGainAverageResetAP={archer:18,thief:18,corsair:20,bucc:40,warrior:52.5,hero:52.5,magician:15,beginner:10},HealthPointGainMinimumFreshAP={archer:16,thief:20,corsair:16,bucc:36,warrior:50,hero:50,magician:6,beginner:8},HealthPointGainAverageFreshAP={archer:18,thief:22,corsair:18,bucc:38,warrior:52,hero:52,magician:8,beginner:10},ManaPointLoss={archer:12,thief:12,corsair:16,bucc:16,warrior:4,hero:4,magician:30,beginner:8},MinimumManaPointFunctions={archer:e=>14*e+148,thief:e=>14*e+148,corsair:e=>18*e+111,bucc:e=>18*e+111,warrior:e=>4*e+156,hero:e=>4*e+56,magician:e=>22*e+488,beginner:e=>10*e+2},OptimalWashingStrategy={archer:"either",thief:"fresh",bucc:"reset",corsair:"reset",warrior:"reset",hero:"reset",magician:"reset",beginner:"either"};function GetOptimalWashingStrategy(e){if(!Classes.hasOwnProperty(e))throw new Exception("unrecognized class name "+e);e=Classes[e];return OptimalWashingStrategy[e]}function GetWashableManaPoints(e,a,n){if(!Classes.hasOwnProperty(e))throw new Exception("unrecognized class name "+e);e=Classes[e],a=MinimumManaPointFunctions[e](a);return Math.max(n-a,0)}function GetWashedManaPoints(e,a){if(!Classes.hasOwnProperty(e))throw new Exception("unrecognized class name "+e);e=Classes[e];return ManaPointLoss[e]*a}function GetWashes(e,a){if(!Classes.hasOwnProperty(e))throw new Exception("unrecognized class name "+e);e=Classes[e],e=ManaPointLoss[e];return Math.floor(a/e)}function GetMinimalHealthPointGainOptimal(e,a,n){if(!Classes.hasOwnProperty(e))throw new Exception("unrecognized class name "+e);e=Classes[e];return a*HealthPointGainMinimumFreshAP[e]+n*HealthPointGainMinimumResetAP[e]}function GetAverageHealthPointGainOptimal(e,a,n){if(!Classes.hasOwnProperty(e))throw new Exception("unrecognized class name "+e);e=Classes[e];return a*HealthPointGainAverageFreshAP[e]+n*HealthPointGainAverageResetAP[e]}function GetMinimalHealthPointGainWashNow(e,a){if(!Classes.hasOwnProperty(e))throw new Exception("unrecognized class name "+e);e=Classes[e];return a*HealthPointGainMinimumResetAP[e]}function GetAverageHealthPointGainWashNow(e,a){if(!Classes.hasOwnProperty(e))throw new Exception("unrecognized class name "+e);e=Classes[e];return a*HealthPointGainAverageResetAP[e]}function GetFreshAPsLeft(e){return 5*(200-e)}
